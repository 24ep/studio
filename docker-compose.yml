version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9002:9002" # Next.js dev server (from package.json)
    volumes:
      # Mounts the current directory into /app in the container for live updates
      - .:/app
      # Use named volumes for node_modules and .next to avoid overwriting
      # container's versions with local machine's (especially if OS differs)
      - app_node_modules:/app/node_modules
      - app_next:/app/.next
    environment:
      # IMPORTANT: Fill these with your Azure AD App Registration details
      # These can also be in a .env.local file which Docker Compose will pick up by default.
      # Ensure NEXTAUTH_SECRET is strong and unique.
      AZURE_AD_CLIENT_ID: "your_azure_ad_application_client_id"
      AZURE_AD_CLIENT_SECRET: "your_azure_ad_client_secret_value"
      AZURE_AD_TENANT_ID: "your_azure_ad_directory_tenant_id"
      NEXTAUTH_URL: "http://localhost:9002" # Should match the exposed port
      NEXTAUTH_SECRET: "super-secret-nextauth-key-replace-this" # Generate a strong secret: openssl rand -base64 32

      # For Genkit, if Google AI needs API key via env var (uncomment and set if needed)
      # GOOGLE_API_KEY: "your_google_api_key"

      # Set NODE_ENV to development if not already set by the base image or npm script
      NODE_ENV: development
    depends_on:
      - postgres
      - minio
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: canditrack_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # MinIO API port
      - "9001:9001" # MinIO Console port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minio_secret_password # Change this in production
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  redis_data:
  app_node_modules:
  app_next:
