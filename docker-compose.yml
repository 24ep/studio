version: '3.8'

services:
  app:
    image: 24ep/studio:uat
    ports:
      - "${APP_PORT:-9846}:9846"
    # For production deployments, you typically want the application code to be self-contained
    # within the Docker image. The volume mount `.:/app` is primarily for local development to
    # reflect code changes without rebuilding the image. It's commented out for production-like behavior.
    # If this mount is active in a production-like environment (e.g., Portainer deploying from an image
    # or a CI/CD pipeline), and the host path "." does not contain your application code (including package.json),
    # it will overwrite the files copied into the image, leading to "package.json not found" errors.
    # volumes:
    #   - .:/app # Ensure this is commented out or removed for production deployments where the image is self-contained.
    #
    # The named volumes below are generally fine and can be useful for persisting
    # node_modules and the .next build cache across container restarts, potentially
    # speeding up subsequent starts if the underlying image hasn't changed significantly.
    # volumes:
      # - app_node_modules:/app/node_modules
      # - app_next:/app/.next
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_PUBLIC_BASE_URL: ${MINIO_PUBLIC_BASE_URL}
      REDIS_URL: ${REDIS_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      # Azure AD Configuration (Optional - set these only if you want to use Azure AD SSO)
      AZURE_AD_CLIENT_ID: ${AZURE_AD_CLIENT_ID}
      AZURE_AD_CLIENT_SECRET: ${AZURE_AD_CLIENT_SECRET}
      AZURE_AD_TENANT_ID: ${AZURE_AD_TENANT_ID}
      # Public Azure AD variables for client-side detection (Optional)
      NEXT_PUBLIC_AZURE_AD_CLIENT_ID: ${NEXT_PUBLIC_AZURE_AD_CLIENT_ID}
      NEXT_PUBLIC_AZURE_AD_TENANT_ID: ${NEXT_PUBLIC_AZURE_AD_TENANT_ID}
      # RESUME_PROCESSING_WEBHOOK_URL is the generic fallback for resume processing webhook
      RESUME_PROCESSING_WEBHOOK_URL: ${RESUME_PROCESSING_WEBHOOK_URL}
      # GENERAL_PDF_WEBHOOK_URL is used for automated candidate creation from PDF resumes
      GENERAL_PDF_WEBHOOK_URL: ${GENERAL_PDF_WEBHOOK_URL}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      NEXT_PUBLIC_GOOGLE_FONTS_API_KEY: ${NEXT_PUBLIC_GOOGLE_FONTS_API_KEY}
      NODE_ENV: ${NODE_ENV}
      PROCESSOR_API_KEY: ${PROCESSOR_API_KEY}
      DB_HOST: postgres
      DB_PORT: 5432
    depends_on:
      - postgres
      - minio
      - redis
    restart: unless-stopped

    # Strict resource limits for runtime
    mem_limit: 1g
    cpus: 0.5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    # The command to run the application is defined in the Dockerfile's CMD instruction
    # which uses wait-for-db.sh for optimized startup

  postgres:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Ensure proper initialization
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    # Resource limits
    mem_limit: 512m
    cpus: 0.25

  minio:
    image: minio/minio:latest
    ports:
      - "${MINIO_API_PORT:-9847}:9000" # MinIO API port
      - "${MINIO_CONSOLE_PORT:-9848}:9001" # MinIO Console port
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_BROWSER_REDIRECT_URL: http://localhost:${MINIO_CONSOLE_PORT}
    command: server /data --console-address ":9001" --address ":9000"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    # Resource limits
    mem_limit: 512m
    cpus: 0.25

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_EXTERNAL_PORT:-9850}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    # Resource limits
    mem_limit: 256m
    cpus: 0.1

  upload-queue-processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_PUBLIC_BASE_URL: ${MINIO_PUBLIC_BASE_URL}
      REDIS_URL: ${REDIS_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      AZURE_AD_CLIENT_ID: ${AZURE_AD_CLIENT_ID}
      AZURE_AD_CLIENT_SECRET: ${AZURE_AD_CLIENT_SECRET}
      AZURE_AD_TENANT_ID: ${AZURE_AD_TENANT_ID}
      NEXT_PUBLIC_AZURE_AD_CLIENT_ID: ${NEXT_PUBLIC_AZURE_AD_CLIENT_ID}
      NEXT_PUBLIC_AZURE_AD_TENANT_ID: ${NEXT_PUBLIC_AZURE_AD_TENANT_ID}
      RESUME_PROCESSING_WEBHOOK_URL: ${RESUME_PROCESSING_WEBHOOK_URL}
      GENERAL_PDF_WEBHOOK_URL: ${GENERAL_PDF_WEBHOOK_URL}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      NEXT_PUBLIC_GOOGLE_FONTS_API_KEY: ${NEXT_PUBLIC_GOOGLE_FONTS_API_KEY}
      NODE_ENV: ${NODE_ENV}
      PROCESSOR_INTERVAL_MS: ${PROCESSOR_INTERVAL_MS}
      LOG_INTERVAL_MS: ${LOG_INTERVAL_MS}
      PROCESSOR_URL: http://app:9846/api/upload-queue/process
      PROCESSOR_API_KEY: ${PROCESSOR_API_KEY}
    depends_on:
      - app
      - postgres
      - minio
      - redis
    restart: unless-stopped
    mem_limit: 1g
    cpus: 0.5

volumes:
  postgres_data:
  minio_data:
  redis_data:
  # app_node_modules:
  # app_next:
