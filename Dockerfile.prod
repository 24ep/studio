# =================================================================
# == Production Dockerfile using pre-built image
# =================================================================
FROM 24ep/studio:dev

WORKDIR /app

# Limit Node.js memory usage in production (1GB limit to prevent excessive usage)
ENV NODE_OPTIONS=--max-old-space-size=1024

# Install only runtime dependencies
RUN apk add --no-cache curl

# Don't run production as root
USER node

# Set NODE_ENV for production
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Copy only the necessary runtime files that might be missing from the base image
COPY --chown=node:node process-upload-queue.mjs ./process-upload-queue.mjs
COPY --chown=node:node ws-queue-bridge.js ./ws-queue-bridge.js
COPY --chown=node:node wait-for-db.sh ./wait-for-db.sh
RUN chmod +x ./wait-for-db.sh && ls -la && echo "Runtime files copied successfully"

# Expose the port the app will run on
EXPOSE 9846

# Healthcheck for container health
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:9846/api/health || exit 1

# Start the app with migrations and seeding, waiting for DB first
CMD ./wait-for-db.sh "$DB_HOST:$DB_PORT" -- npx prisma migrate deploy && npx prisma db:seed && npm run start 