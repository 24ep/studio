git // This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid()) @db.Uuid
  name              String
  email             String   @unique
  password          String
  role              String
  avatarUrl         String?  @map("avatarUrl")
  dataAiHint        String?  @map("dataAiHint")
  modulePermissions String[] @default([])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  candidates        Candidate[] @relation("RecruiterCandidates")
}

model Position {
  id               String   @id @default(uuid()) @db.Uuid
  title            String
  department       String
  description      String?
  isOpen           Boolean  @default(true)
  position_level   String?
  customAttributes Json?    @default("{}")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  candidates       Candidate[]
}

model Candidate {
  id              String   @id @default(uuid()) @db.Uuid
  name            String
  email           String   @unique
  phone           String?
  positionId      String?  @db.Uuid
  recruiterId     String?  @db.Uuid
  fitScore        Int?     @default(0)
  status          String   @default("Applied")
  applicationDate DateTime @default(now())
  parsedData      Json?
  customAttributes Json?   @default("{}")
  resumePath      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  avatarUrl       String?  @map("avatarUrl")
  dataAiHint      String?  @map("dataAiHint")
  position        Position? @relation(fields: [positionId], references: [id])
  recruiter       User?     @relation("RecruiterCandidates", fields: [recruiterId], references: [id])
}
